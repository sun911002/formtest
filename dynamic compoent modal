@ViewChild('messagecontainer',{read:ViewContainerRef})entry:ViewContainerRef;
constructor(private resolver:ComponentFactoryResolver){}

createComponent(message) {
  
  this.entry.clear();
  const factory = this.resolver.resolveComponentFactory(MessageComponent);
  this.componentRef = this.entry.createComponent(factory);
  this.componentRef.instance.message = message;
  this.componentRef.instance.change.subscribe((item)=>{
 //this.componentRef && this.componentRef.destroy();
 console.log(item);
 console.log(this.componentRef.destroy());
 this.componentRef.destroy();
  });
}

@Output() change=new EventEmitter<any>();
closeModal(){
    this.change.emit(this.show);
}



*********************modal**************************

<div id="myModal" class="modal"  >
  
    <!-- Modal content -->
    <div class="modal-content">
      <div class="modal-header">
        <span class="close" (click)="closeModal()">&times;</span>
        <h2>Modal Header</h2>
      </div>
      <div class="modal-body">
        <p>Some text in the Modal Body</p>
        <p>Some other text...</p>
      </div>
      <div class="modal-footer">
        <h3>Modal Footer</h3>
      </div>
    </div>
  
  </div>
  
 *************************modal css************************
 .modal {
    /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.3); /* Black w/ opacity */
    -webkit-animation-name: fadeIn; /* Fade in the background */
    -webkit-animation-duration: 0.4s;
    animation-name: fadeIn;
    animation-duration: 0.4s;

  }
  
  /* Modal Container */
  .modal-content {
    position: relative;
    background-color: #fefefe;    
    padding: 0;
    border: 1px solid #888;
    width: 40%;
    top:50%;
    left:50%;
    transform: translate(-50%,-50%);
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s
  }
  
  /* Add Animation */
  @-webkit-keyframes animatetop {
    from {top:-300px; opacity:0} 
    to {top:50%; opacity:1}
  }
  
  @keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:50%; opacity:1}
  }
  
  /* The Close Button */
  .close {
    color: white;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
  }
  
  .modal-header {
    padding: 2px 16px;
    background-color:#2f3640;
    color:#f5f6fa;
  } 
  
  .modal-body {padding: 2px 16px;}
  
  .modal-footer {
    padding: 2px 16px;
    background-color:#2f3640;
    color:#f5f6fa;
  }
 
